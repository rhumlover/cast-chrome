// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  var DMCast, app, receiver;

  DMCast = (function() {
    DMCast.prototype.APPID = '358a5251-4f55-4e2d-9276-62da9b153a22_1';

    DMCast.prototype.PROTOCOL = cast.receiver.RemoteMedia.NAMESPACE;

    function DMCast() {
      var castEvents;
      castEvents = cast.receiver.Channel.EventType;
      this.remoteMedia = new cast.receiver.RemoteMedia();
      this.remoteMedia.onMessage = this.onMessage;
    }

    DMCast.prototype.onChannelOpened = function(event) {
      console.log('onChannelOpened. Total number of channels: ' + this.remoteMedia.getChannels().length);
    };

    DMCast.prototype.onChannelClosed = function(event) {
      console.log('onChannelClosed. Total number of channels: ' + this.remoteMedia.getChannels().length);
      if (this.remoteMedia.getChannels().length === 0) {
        window.close();
      }
    };

    DMCast.prototype.onMessage = function(event) {
      var channel, message;
      message = event.message;
      channel = event.target;
      console.log('********onMessage********' + JSON.stringify(message));
    };

    return DMCast;

  })();

  receiver = new cast.receiver.Receiver(DMCast.APPID, [DMCast.PROTOCOL], '', 5);

  app = new DMCast();

  app.remoteMedia.addChannelFactory(receiver.createChannelFactory(DMCast.PROTOCOL));

  receiver.start();

  window.addEventListener('load', function() {
    var checkStatus, player, remoteMedia;
    remoteMedia = app.remoteMedia;
    player = document.querySelector('.player');
    remoteMedia.setMediaElement(player);
    checkStatus = function() {
      var st, status;
      status = document.getElementById('status');
      st = remoteMedia.getStatus()['state'];
      if (st === 0 || remoteMedia.getStatus()['current_time'] === 0) {
        console.log('status = non started');
      } else {
        if (st === 1 && remoteMedia.getStatus()['current_time'] > 0) {
          console.log('status = paused');
        } else {
          console.log('status = go !');
        }
      }
    };
    return setInterval(checkStatus, 1000);
  });

  return;

}).call(this);
